using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System;

namespace Gestures {

    /// <summary>
    /// Data class to contain all necessary information related to a controller transform
    /// </summary>
    public class GTransform {

        /// <summary>
        /// The position vector generated by the IController
        /// </summary>
        public Vector3 position;

        /// <summary>
        /// The rotation Quaternion generated by the IController
        /// </summary>
        public Quaternion rotation;

        /// <summary>
        /// The velocity vector generated by the IController
        /// </summary>
        public Vector3 velocity;

        /// <summary>
        /// The current time at which the GTransform was generated
        /// </summary>
        /// <remark>
        /// Best practice is using Time.time, or some time from an independent epoch.
        /// </remark>
        public float time;

        /// <summary>
        /// Create a GTransform objet with the specified position, quaternion, velocity, and time data points.
        /// </summary>
        /// <param name="pos">The position Vector3 generated by the IController </param>
        /// <param name="quat">The rotation quaternion generated by the IController </param>
        /// <param name="vel">The velocity Vector3 generated by the IController </param>
        /// <param name="t">The current time as determined by the IController</param>
        public GTransform(Vector3 pos, Quaternion quat, Vector3 vel, float t) {
            position = pos;
            rotation = quat;
            velocity = vel;
            time = t;
        }

        /// <summary>
        /// Create a copy of the GTransform instance
        /// </summary>
        /// <returns>
        /// Return new `GTransform` with the same data as the object this method was called on.
        /// </returns>
        public GTransform Copy() {
            return new GTransform(position, rotation, velocity, time);
        }
    }
}

